apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: metakube-cluster-openstack
  labels:
    provider: syseleven
    cloudProvider: openstack
spec:
  compositeTypeRef:
    apiVersion: platform.example.com/v1alpha1
    kind: XMetaKubeCluster

  mode: Pipeline
  pipeline:
  - step: patch-and-transform
    functionRef:
      name: function-patch-and-transform
    input:
      apiVersion: pt.fn.crossplane.io/v1beta1
      kind: Resources
      resources:
      - name: metakube-cluster
        base:
          apiVersion: metakube.metakube.syseleven.io/v1alpha1
          kind: Cluster
          spec:
            providerConfigRef:
              name: default
            forProvider:
              spec:
              - cloud:
                - openstack:
                  - applicationCredentials:
                    - secretSecretRef:
                        key: token
                        name: metakube-creds
                        namespace: crossplane-system
        patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.writeConnectionSecretToRef
          toFieldPath: spec.writeConnectionSecretToRef
          policy:
            fromFieldPath: Optional
        # Set projectId from claim
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.projectId
          toFieldPath: spec.forProvider.projectId
        # Construct applicationCredentials.id as "s11auth:PROJECT_ID"
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.projectId
          toFieldPath: spec.forProvider.spec[0].cloud[0].openstack[0].applicationCredentials[0].id
          transforms:
          - type: string
            string:
              type: Format
              fmt: "s11auth:%s"
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.dcName
          toFieldPath: spec.forProvider.dcName
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.kubernetesVersion
          toFieldPath: spec.forProvider.spec[0].version
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: metadata.name
        - type: ToCompositeFieldPath
          fromFieldPath: metadata.annotations[crossplane.io/external-name]
          toFieldPath: status.clusterId
      - name: metakube-node-deployment
        base:
          apiVersion: node.metakube.syseleven.io/v1alpha1
          kind: Deployment
          metadata:
            name: worker-nodes
          spec:
            providerConfigRef:
              name: default
            forProvider:
              spec:
                - replicas: 1
                  template:
                    - cloud:
                        - openstack:
                            - flavor: m2.small
                              image: "Ubuntu Jammy 22.04"
                      operatingSystem:
                        - ubuntu:
                            - distUpgradeOnBoot: false
        patches:
        - type: FromCompositeFieldPath
          fromFieldPath: status.clusterId
          toFieldPath: spec.forProvider.clusterId
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.projectId
          toFieldPath: spec.forProvider.projectId
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.nodeCount
          toFieldPath: spec.forProvider.spec[0].replicas
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.nodeSize
          toFieldPath: spec.forProvider.spec[0].template[0].cloud[0].openstack[0].flavor
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.nodeImage
          toFieldPath: spec.forProvider.spec[0].template[0].cloud[0].openstack[0].image
        - type: FromCompositeFieldPath
          fromFieldPath: spec.parameters.kubernetesVersion
          toFieldPath: spec.forProvider.spec[0].template[0].versions[0].kubelet
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: metadata.name
